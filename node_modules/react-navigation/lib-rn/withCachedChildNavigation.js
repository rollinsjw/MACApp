<<<<<<< HEAD
import React, { PureComponent } from 'react';
=======
import * as React from 'react';
>>>>>>> a622a84fa9b65a4b43e8645addefe35ee1624fe7

import addNavigationHelpers from './addNavigationHelpers';

/**
 * HOC which caches the child navigation items.
 */
export default function withCachedChildNavigation(Comp) {
<<<<<<< HEAD
  return class extends PureComponent {
    static displayName = `withCachedChildNavigation(${Comp.displayName || Comp.name})`;
=======
  const displayName = Comp.displayName || Comp.name;
  return class extends React.PureComponent {
    static displayName = `withCachedChildNavigation(${displayName})`;
>>>>>>> a622a84fa9b65a4b43e8645addefe35ee1624fe7

    componentWillMount() {
      this._updateNavigationProps(this.props.navigation);
    }

    componentWillReceiveProps(nextProps) {
      this._updateNavigationProps(nextProps.navigation);
    }

    _updateNavigationProps = navigation => {
      // Update props for each child route
      if (!this._childNavigationProps) {
        this._childNavigationProps = {};
      }
      navigation.state.routes.forEach(route => {
        const childNavigation = this._childNavigationProps[route.key];
        if (childNavigation && childNavigation.state === route) {
          return;
        }
        this._childNavigationProps[route.key] = addNavigationHelpers({
<<<<<<< HEAD
          ...navigation,
=======
          dispatch: navigation.dispatch,
>>>>>>> a622a84fa9b65a4b43e8645addefe35ee1624fe7
          state: route
        });
      });
    };

    render() {
      return <Comp {...this.props} childNavigationProps={this._childNavigationProps} />;
    }
  };
}